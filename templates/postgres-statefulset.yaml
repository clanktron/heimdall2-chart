apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "heimdall.fullname" . }}-postgresql
  labels:
    {{- include "heimdall.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  serviceName: {{ template "heimdall.fullname" . }}-postgresql
  replicas: 1
  selector:
    matchLabels: 
      {{- include "heimdall.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgresql
  template:
    metadata:
      {{- with .Values.postgres.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "heimdall.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgresql
    spec:
      {{- with .Values.postgres.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 999
        fsGroup: 999
      serviceAccountName: {{ include "heimdall.fullname" . }}-postgres-sa
      containers:
      - name: postgres
        securityContext:
          {{- toYaml .Values.postgres.securityContext | nindent 12 }}
        image: "{{ template "system_default_registry" . }}{{ .Values.postgres.image.name }}:{{ .Values.postgres.image.tag }}"
        imagePullPolicy: {{ .Values.postgres.imagePullPolicy }}
        ports:
          - name: tcp-postgresql
            containerPort: {{ .Values.postgres.port }}
        env:
          - name: PGDATA
            value: "/var/lib/postgresql/data/pgdata"
          - name: POSTGRES_DB
            value: {{ .Values.heimdall.databaseName | quote }}
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: databaseUsername
                name: {{ include "heimdall.fullname" . }}-secret
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: databasePassword
                name: {{ include "heimdall.fullname" . }}-secret
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: postgresql-data
        {{- with .Values.postgres.resources }}
        resources:
          {{- toYaml . | nindent 12 }}
        {{- end }}
      {{- with .Values.postgres.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgres.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgres.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      volumes:
        - name: postgresql-data
        {{- if .Values.postgres.persistence.enabled }}
        {{- if .Values.postgres.persistentVolumeClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.postgres.persistentVolumeClaim }}
        {{- else  }}
          persistentVolumeClaim:
            claimName: {{ include "heimdall.fullname" . }}-postgres-data
        {{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}